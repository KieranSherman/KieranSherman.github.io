#!/bin/bash
#author: Kieran Sherman

JoJSHELL="/usr/local/bin"
JoJPATH=`echo ~`"/bin/JarOfJava"
JoJNAME="kieransherman.github.io"
JoJVERSION="version 1.4.1"
JoJUSAGE="usage: joj [-acejlpru] | help"
JoJINFO="\tJoJ $JoJVERSION\nCopyright 2017 | Kieran Sherman\n\n$JoJUSAGE\n"

__check() {
  arg1=$1

  a="a: open the project folder in Atom"
  c="c: clone the dev directory to the usr directory"
  e="e: edit the JoJ shell file in Atom"
  j="j: update the JoJ shell script to the newest version"
  l="l: view JarOfJava locally (from your computer)"
  p="p: view JarOfJava publicly (online)"
  r="r: retrieve from the git repository"
  u="u: update to the git repository"
  x="x: remove the JoJ shell commands and repository"
  usages=("$a" "$c" "$e" "$j" "$l" "$p" "$r" "$u" "$x")

  if [[ "$arg1" == "help" ]]
  then
    echo
    for ((i=0;i<${#usages[@]};i++)) do
      echo ${usages[$i]}
    done
    echo
    return
  fi

  if [[ "${arg1:0:1}" == "-" ]]
  then
    for ((i=1;i<${#arg1};i++)) do
      __parse ${arg1:$i:1} $2
    done
  else
    printf "\n================================\n"
    printf "$JoJINFO"
    printf "================================\n\n"
  fi
}

__parse() {
  HELP=false
  [[ "$2" == "help" ]] && HELP=true; printf "%s" "--";

  case $1 in
    a)
      [[ $HELP == true ]] && echo "usage: joj -a |-> opens the JoJ files in Atom" || (
        open -b "com.github.atom" .
      )
      ;;
    c)
      [[ $HELP == true ]] && echo "usage: joj -c | clones the dev directory to the usr directory" || (
        rm -R usr
        cp -R dev usr
      )
    ;;
    e)
      [[ $HELP == true ]] && echo "usage: joj -e |-> opens the joj shell script in Atom" || (
        open -b "com.github.atom" /usr/local/bin/joj
      )
    ;;
    j)
      [[ $HELP == true ]] && echo "usage: joj -j |-> retrieves the newest version of the JoJ shell commands" || (
        echo "Updating JoJ version... current: $JoJVERSION"
        cd $JoJSHELL
        rm joj
        curl -o joj https://raw.githubusercontent.com/KieranSherman/kieransherman.github.io/master/misc/joj
        chmod +x joj
        joj
      )
    ;;
    l)
      [[ $HELP == true ]] && echo "usage: joj -l [file] |-> opens an html file locally, defaults to index.html" || (
        if [[ -z "$2" ]]
        then
          open index.html
        else
          open "$2"
        fi
      )
      ;;
    p)
      [[ $HELP == true ]] && echo "usage: joj -p |-> opens JoJ publicly (via Chrome) @ www.jarofjava.com" || (
        open -b "com.google.chrome" "http://www.jarofjava.com"
      )
      ;;
    r)
      [[ $HELP == true ]] && echo "usage: joj -r |-> retrieves the current github JoJ files and overwrites existing" || (
        git fetch --all
        git reset --hard origin/master
      )
      ;;
    u)
      [[ $HELP == true ]] && echo "usage: joj -u [message] |-> updates your JoJ files to github" || (
        x=`date +%H:%M:%S--%m/%d`
        git add .
        git commit -m "Auto-update from CLI @ $x [$2]"
        git push
      )
      ;;
    x)
      rm "$JoJSHELL/joj"
      rm -R "$JoJPATH"
      echo "JoJ has been uninstalled"
    ;;
    *)
      printf "%s\n\n" "$JoJUSAGE"
      exit 1
    ;;
  esac

  echo
}

__install() {
  dir="$1"

  echo
  echo "joj --$JoJVERSION"
  echo "================================================="

  mv "$dir/joj" "/usr/local/bin"

  echo "--           creating file structure           --"
  echo "--                                             --"
  mkdir -p $JoJPATH
  cd $JoJPATH

  echo "--           cloning git repository            --"
  echo "--                                             --"
  git clone "https://github.com/KieranSherman/$JoJNAME"

  echo "--                                             --"
  echo "--         JoJ installed successfully          --"
  echo "-- restart Terminal for changes to take effect --"
  echo "================================================="
  echo
}

main() {
  dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

  if [[ ! "$dir" == "/usr/local/bin" ]]
  then
    __install $dir
    exit 0
  fi

  cd "$JoJPATH/$JoJNAME"

  __check $1 $2
}

main $1 $2
